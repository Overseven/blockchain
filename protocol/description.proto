syntax = "proto3";

option go_package = "github.com/overseven/blockchain/protocol/protocol";

package protocol;

import "google/protobuf/timestamp.proto";


// The greeting service definition.
service Noder {
  // Sends a greeting
  rpc AddTransaction(AddTransactionRequest) returns (AddTransactionReply) {}
  rpc GetBlocks(GetBlocksRequest) returns (GetBlocksReply) {}
}

message TransAirDrop{
  bytes receiver = 1;
  double pay = 2;
  double fee = 3;
  string message = 4;
  google.protobuf.Timestamp timestamp = 5;
  bytes node = 6;
  bytes sign = 7;
}

message TransTransfer{
  bytes sender = 1;
  bytes receiver = 2;
  double pay = 3;
  double fee = 4;
  string message = 5;
  google.protobuf.Timestamp timestamp = 6;
  bytes node = 7;
  bytes sign = 8;
}

message Transaction{
    uint32 protocolVersion = 1;
    oneof trans{
      TransTransfer transfer = 3;
      TransAirDrop drop = 4;
    }
}

message Block{
    uint32 protocolVersion = 1;
    uint64 blockId = 2;
    repeated Transaction trans = 3;
    bytes prevBlockHash = 4;
    uint32 difficulty = 5;
    bytes miner = 6;
    bytes blockHash = 7;
    bytes nonce = 8;
}



message AddTransactionRequest {
  Transaction transaction = 1;
}

message AddTransactionReply {
  enum Code {
    TR_Error = 0;
    TR_Ok = 1;
  }
  Code reply = 1;
  string message = 2;
  string additional = 3;
}

message GetBlocksRequest{
  uint64 blockIdBegin = 1;
  uint64 blockIdEnd = 2;
}

message GetBlocksReply{
    repeated Block blocks = 1;
}